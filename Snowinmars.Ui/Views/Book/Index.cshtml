@using Snowinmars.Entities
@model IEnumerable<Snowinmars.Ui.Models.BookModel>

@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Layouts/DefaultLayout.cshtml";
}

@section Content
{
	<link href="~/Content/snowinmars/bookIndex.css" rel="stylesheet" />
	<link href="~/Content/snowinmars/loadingCube.css" rel="stylesheet" />
}

<h2>All books</h2>

@if (User.IsInRole(UserRoles.Admin.ToString()) ||
     User.IsInRole(UserRoles.Root.ToString()))
{
    <p>
        @Html.ActionLink("Create new book", "Create")
    </p>
}

<div class="sk-folding-cube-parent">
	<div class="sk-folding-cube">
		<div class="sk-cube1 sk-cube"></div>
		<div class="sk-cube2 sk-cube"></div>
		<div class="sk-cube4 sk-cube"></div>
		<div class="sk-cube3 sk-cube"></div>
	</div>
</div>

<table class="table hidden">
	<thead>
		<tr>
			<th class="col-xs-3 noOverflow">
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th class="col-xs-1">
				@Html.DisplayNameFor(model => model.Year)
			</th>
			<th class="col-xs-1 hidden-xs">
				@Html.DisplayNameFor(model => model.PageCount)
			</th>
			<th class="col-xs-4 hidden-sm hidden-xs">
				@Html.DisplayNameFor(model => model.AuthorModelIds)
			</th>
			<th class="col-sm-4 col-xs-2 no-sort"></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			if (User.Identity.Name == item.Owner)
			{
				@:<tr data-id="@item.Id" class="myBook">
			}
			else
			{
				@:<tr data-id="@item.Id">
			}
				<td class="col-xs-3 noOverflow titleColumn">
				    <span class="myBookIcon glyphicon glyphicon-book" data-toggle="tooltip" data-placement="top" title="Yours"></span>
                    
                    @Html.DisplayFor(modelItem => item.Title)
				</td>
				<td class="col-xs-1 ">
					@Html.DisplayFor(modelItem => item.Year)
				</td>
				<td class="col-xs-1 hidden-xs">
					@Html.DisplayFor(modelItem => item.PageCount)
				</td>
		    <td class="col-xs-4 hidden-sm hidden-xs">
                @Html.DropDownList("authorModelIds_" + item.Id, item.AuthorShortcuts.Select(s => new SelectListItem { Text = s, Selected = true, }), new Dictionary<string, object> { { "class", "authorModelIds col-xs-10" }, { "multiple", "multiple" }, })
		       
                @if (!item.IsSynchronized)
                {
                    <span class="synchronizationIcon glyphicon glyphicon-refresh glyphicon-spin col-xs-1" data-toggle="tooltip" data-placement="top" title="Sync"></span>
                }
                else
                {
                    <span class="hidden synchronizationIcon glyphicon glyphicon-refresh glyphicon-spin col-xs-1" data-toggle="tooltip" data-placement="top" title="Sync"></span>
                }
		    </td>
		    <td class="col-sm-4 col-xs-2">
		        @if (User.IsInRole(UserRoles.Admin.ToString()) ||
		             User.IsInRole(UserRoles.Root.ToString()))
		        {
		            @RenderPage("~/Views/Layouts/_EditDetailsDeleteActionPartialPanel.cshtml", item.Id)
                }
                else
                {
                    @RenderPage("~/Views/Layouts/_DetailsActionPartialPanel.cshtml", item.Id)
                }
		    </td>
			@:</tr>
		}
	</tbody>
</table>

@section Scripts
{
	<script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
	<script src="~/Scripts/DataTables/dataTables.bootstrap.min.js"></script>

	<script src="~/Scripts/snowinmars/bookIndex.js"></script>
}